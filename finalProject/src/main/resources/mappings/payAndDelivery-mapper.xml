<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.company.payAndDelivery.service.impl.PayAndDeliveryMapper">
	
	<select id="getCount" resultType="int">
		SELECT COUNT(*)
		FROM PAYANDDELIVERY
		WHERE MEMBERID=#{memberId}
	</select>
	
	<select id="getCount99" resultType="int">
		SELECT COUNT(*)
		FROM PAYANDDELIVERY
	</select>
	
	<!-- 구매내역리스트 조회 -->
	<select id="getSearchPayAndDelivery" resultType="PayAndDeliveryVO">
	SELECT B.* FROM ( SELECT ROWNUM RN, A.* FROM (
	SELECT PNDNUMBER
	, CATEGORY
	, COURIERCOMPANY
	, PAYDATE
	, INVOICENUMBER
	, TO_CHAR(SUMPRICE, '999,999,999') AS SUMPRICE
	, MEMBERID
	, BUYSTATE 
	FROM PAYANDDELIVERY
	WHERE MEMBERID=#{memberId}
	ORDER BY PNDNUMBER DESC
	) A ) B WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 예약하기 버튼눌러서 날짜선택시 PAYANDDELIVERY DB update -->
	<update id="updateReservation2" parameterType="PayAndDeliveryVO">
		UPDATE PAYANDDELIVERY SET 
		BUYSTATE='예약완료'
		WHERE PNDNUMBER=#{pndNumber}
	</update>
	
	<!-- 관리자용 구매내역리스트 조회 -->
	<select id="getSearchPayAndDelivery99" resultType="PayAndDeliveryVO">
	SELECT B.* FROM ( SELECT ROWNUM RN, A.* FROM (
	SELECT PNDNUMBER
	, CATEGORY
	, COURIERCOMPANY
	, PAYDATE
	, INVOICENUMBER
	, TO_CHAR(SUMPRICE, '999,999,999') AS SUMPRICE
	, MEMBERID
	, BUYSTATE 
	FROM PAYANDDELIVERY
	ORDER BY PNDNUMBER DESC
	) A ) B WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 관리자의 배송정보 입력 -->	
	<update id="updateDelivery" parameterType="PayAndDeliveryVO">
		UPDATE PAYANDDELIVERY SET 
		COURIERCOMPANY = #{courierCompany}
		, INVOICENUMBER = #{invoiceNumber}
		WHERE PNDNUMBER=#{pndNumber}
	</update>

	<!-- 캘린더 -->
	<select id="getSearchCalendar" resultType="map">
	SELECT PNDNUMBER
	, CATEGORY
	, COURIERCOMPANY
	, PAYDATE
	, INVOICENUMBER
	, TO_CHAR(SUMPRICE, '999,999,999') AS SUMPRICE
	, MEMBERID
	, BUYSTATE 
	FROM PAYANDDELIVERY
	WHERE BUSINESSNUMBER = #{businessNumber}
	ORDER BY PNDNUMBER
	</select>

	<!-- 결제내역 차트용 -->
	<!-- 컬럼차트 -->
	<select id="getColumnChart" resultType="map">
	SELECT PAYDATE,SUM(SUMPRICE) SUM
	FROM(
		SELECT
		TO_CHAR(PAYDATE,'yyyy-mm') paydate, sum(SUMPRICE) sumprice
		FROM PAYANDDELIVERY
		<!-- 사업자 -->
		<if test="businessNumber !=null">
			WHERE businessNumber = #{businessNumber}
		</if>
		<!-- 관리자 -->
		<if test="category == 70">
			WHERE CATEGORY = 70
		</if>
		
		<!-- 캘린더용 -->
		<if test="startDate !=null and startDate !=''">
			AND PAYDATE BETWEEN TO_DATE(#{startDate},'yyyy-mm-dd')
		</if>		
		<if test="endDate !=null and endDate !=''">
			AND TO_DATE(#{endDate},'yyyy-mm-dd')
		</if>
		AND (BUYSTATE = '결제완료'
		OR BUYSTATE = '예약완료')
		GROUP BY PAYDATE
		)
		GROUP BY PAYDATE
		ORDER BY PAYDATE
	</select>
	
	<!-- 도넛차트 -->
	<select id="getDonutChart" resultType="map">
	SELECT BUYSTATE ,COUNT(BUYSTATE) COUNT
	FROM PAYANDDELIVERY
	<!-- 관리자 -->
	<if test="businessNumber != null">
		WHERE BUSINESSNUMBER = #{businessNumber}
	</if>
	<!-- 사업자 -->
	<if test="category ==70">
   		WHERE CATEGORY = 70
   	</if>
	GROUP BY BUYSTATE
	</select>
	
	<!-- 비교차트 -->
	<select id="getAreaChart" resultType="map">
   	SELECT TO_CHAR(PAYDATE,'YYYY-MM') PAYDATE, 
   	SUM (CASE WHEN BUYSTATE = '예약완료' OR BUYSTATE ='결제완료' THEN SUMPRICE ELSE 0 END) SALES,
	SUM (CASE WHEN BUYSTATE = '환불완료' OR BUYSTATE ='반품완료' THEN SUMPRICE ELSE 0 END) EXPENSES 
    FROM PAYANDDELIVERY
    	<!-- 사업자 -->
    	<if test="businessNumber != null">
	    	WHERE BUSINESSNUMBER = #{businessNumber}
    	</if>
    	<!-- 관리자 -->
    	<if test="category == 70">
    		WHERE CATEGORY = 70
    	</if>
	GROUP BY TO_CHAR(PAYDATE,'YYYY-MM')
	ORDER BY PAYDATE
	</select>
	
</mapper>